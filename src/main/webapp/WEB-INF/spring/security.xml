<?xml version = "1.0" encoding = "utf-8" ?>
<beans:beans
    xmlns:beans     = "http://www.springframework.org/schema/beans"
    xmlns:oauth     = "http://www.springframework.org/schema/security/oauth2"
    xmlns:security  = "http://www.springframework.org/schema/security"
    xmlns:xsi       = "http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation = "http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/security/oauth2
        http://www.springframework.org/schema/security/spring-security-oauth2-1.0.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd"
>
    <security:global-method-security
        pre-post-annotations = "enabled"
        proxy-target-class = "false"
        secured-annotations = "enabled"
        jsr250-annotations = "enabled"
    />

    <!-- Authorization -->
    <security:http
        authentication-manager-ref = "authenticationManager"
        create-session = "stateless"
        pattern = "/security/signin"
    >
        <security:access-denied-handler ref = "securityAccessDeniedHandler" />
        <security:anonymous enabled = "false" />
        <security:custom-filter ref = "clientCredentialsTokenEndpointFilter" before = "BASIC_AUTH_FILTER" />
        <security:http-basic entry-point-ref = "securityEntryPoint" />
        <security:intercept-url pattern = "/security/signin" access = "IS_AUTHENTICATED_FULLY" />
    </security:http>

    <!-- Access to resources -->
    <security:http
            create-session = "never"
            entry-point-ref = "securityAuthenticationEntryPoint"
            pattern = "/user/**"
            >
        <security:access-denied-handler ref = "securityAccessDeniedHandler" />
        <security:anonymous enabled = "false" />
        <security:custom-filter ref = "securityFilter" before = "PRE_AUTH_FILTER" />
        <security:intercept-url pattern = "/user/**" access = "IS_AUTHENTICATED_FULLY" />
    </security:http>

    <!-- BEAN :: SPRING -->
    <!-- OAuth authentication entry point -->
    <beans:bean
        id = "securityAuthenticationEntryPoint"
        class = "org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint"
    />

    <!-- Client authentication entry point -->
    <beans:bean
        id = "securityEntryPoint"
        class = "org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint"
    >
        <beans:property name = "realmName" value = "springsec/client" />
        <beans:property name = "typeName" value = "Basic" />
    </beans:bean>

    <!-- Access denied handler -->
    <beans:bean
        id = "securityAccessDeniedHandler"
        class = "org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler"
    />

    <!-- Client credentials token end-point filter -->
    <beans:bean
        id = "clientCredentialsTokenEndpointFilter"
        class = "org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter"
    >
        <beans:property name = "authenticationManager" ref = "authenticationManager" />
    </beans:bean>

    <!-- Authentication manager -->
    <security:authentication-manager
        alias = "authenticationManager"
    >
        <security:authentication-provider user-service-ref = "clientDetailsUserService" />
    </security:authentication-manager>

    <beans:bean
        id = "clientDetailsUserService"
        class = "org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService"
    >
        <beans:constructor-arg ref = "clientDetails" />
    </beans:bean>

    <beans:bean
        id = "clientDetails"
        class = "com.coffeine.virtuoso.module.security.model.service.implementation.GuestServiceImpl"
    >
        <beans:property name = "clientId" value = "developer" />
        <beans:property name = "clientSecretKey" value = "developer32" />
    </beans:bean>

    <security:authentication-manager id = "userAuthenticationManager">
        <security:authentication-provider ref="customUserAuthenticationProvider" />
    </security:authentication-manager>

    <!--<bean id="customUserAuthenticationProvider"-->
          <!--class="it.iol.oauthaaa.security.AAAUserAuthenticationProvider">-->
    <!--</bean>-->

    <!--<oauth:authorization-server-->
            <!--client-details-service-ref="clientDetails" token-services-ref="tokenServices">-->
        <!--<oauth:authorization-code />-->
        <!--<oauth:implicit/>-->
        <!--<oauth:refresh-token/>-->
        <!--<oauth:client-credentials />-->
        <!--<oauth:password authentication-manager-ref="userAuthenticationManager"/>-->
    <!--</oauth:authorization-server>-->

    <!--<oauth:resource-server id="resourceServerFilter"-->
                           <!--resource-id="springsec" token-services-ref="tokenServices" />-->

    <!--<bean id="tokenStore"-->
          <!--class="org.springframework.security.oauth2.provider.token.InMemoryTokenStore" />-->

    <!--<bean id="tokenServices"-->
          <!--class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">-->
        <!--<property name="tokenStore" ref="tokenStore" />-->
        <!--<property name="supportRefreshToken" value="true" />-->
        <!--<property name="accessTokenValiditySeconds" value="120"></property>-->
        <!--<property name="clientDetailsService" ref="clientDetails" />-->
    <!--</bean>-->

    <!--<mvc:annotation-driven />-->

    <!--<mvc:default-servlet-handler />-->

    <!--<context:annotation-config/>-->

    <!--<bean id="MyResource" class="it.iol.oauthaaa.resources.UserResource"></bean>-->
    <!--<bean id="aaaProxy" class="it.iol.oauthaaa.security.AAAProxy"></bean-->

    <!--<security:authentication-manager alias = "authenticationManager">-->
        <!--<security:authentication-provider>-->
            <!--<security:user-service>-->
                <!--<security:user name="admin" password="admin" authorities="ADMIN" />-->
                <!--<security:user name="musician" password="musician" authorities="MUSICIAN" />-->
                <!--<security:user name="user" password="user" authorities="USER" />-->
            <!--</security:user-service>-->
        <!--</security:authentication-provider>-->
    <!--</security:authentication-manager>-->

    <!--<beans:bean-->
        <!--id = "passwordEncoder"-->
        <!--class = "org.springframework.security.authentication.encoding.ShaPasswordEncoder"-->
    <!--/>-->

</beans:beans>
